name: 'Farm Maven Build'
author: Farm Investimentos
description: GitHub Action para padronizar o processo de build de aplicações Java usando o Farmwork
inputs:
  repo_url:
    description: URL do repositório maven para publicação de artefatos
    required: false
    default: https://maven.pkg.github.com/Farm-Investimentos/farm-maven-repository
  artifact_version:
    description: |
      Versão do artefato que será construído. O valor será repassado para o maven
      usando a opção -Drevision. Caso omitido, assume o valor da variável de ambiente GITHUB_REF_NAME
    required: false
    default: ${GITHUB_REF_NAME}
  publish_token:
    description: Token para acesso ao repositório Maven
    required: true
  java_version:
    description: Versão do Java a utilizar no Build
    required: true
    default: '21'
runs:
  using: composite
  steps:
    - name: Set project name
      shell: bash
      run: |
          PROJECT_NAME=$(basename $GITHUB_REPOSITORY)
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV

    - name: Set SNAPSHOT revision
      if:  startsWith( github.ref, 'refs/heads/'  )
      shell: bash
      run: |
        REVISION=$(echo ${{inputs.artifact_version}} | sed 's/[^.a-z0-9_-]/-/gi')
        REVISION="${REVISION}-SNAPSHOT"
        echo REVISION=${REVISION} >> $GITHUB_ENV

    - name: Set RELEASE revision
      if:  startsWith( github.ref, 'refs/tags/' )
      shell: bash
      run: |
        REVISION=$(echo ${{inputs.artifact_version}} | sed 's/[^.a-z0-9_-]/-/gi')
        echo REVISION=${REVISION} >> $GITHUB_ENV

    - name: Checkout project code
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java_version}}
        distribution: 'temurin'
        cache: 'maven'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Create settings.xml
      shell: bash
      run: |
       cat > $GITHUB_WORKSPACE/settings.xml <<'EOF'
       <settings 
         xmlns="http://maven.apache.org/SETTINGS/1.1.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">
         <servers>
           <server>
             <id>github</id>
             <username>${env.GITHUB_ACTOR}</username>
             <password>${env.GITHUB_TOKEN}</password>
           </server>
         </servers>
         <profiles>
           <profile>
             <id>github-ci</id>
             <properties>
               <farm.repository.url>${{ inputs.repo_url}}</farm.repository.url>
             </properties>
             <repositories>
                <repository>
                  <id>github</id>
                  <url>${{ inputs.repo_url }}</url>
                  <releases>
                    <enabled>true</enabled>
                    <updatePolicy>never</updatePolicy>
                  </releases>
                  <snapshots>
                    <enabled>true</enabled>
                    </snapshots>
                </repository>
             </repositories>
           </profile>
         </profiles>
         <activeProfiles>
           <activeProfile>github-ci</activeProfile>
         </activeProfiles>
       </settings>
       EOF

    - name: Build SNAPSHOT
      shell: bash
      if:  startsWith( github.ref, 'refs/heads/'  )
      run: >
        mvn -B deploy --no-transfer-progress
        -DaltDeploymentRepository=github::default::${{ inputs.repo_url }}
        -s $GITHUB_WORKSPACE/settings.xml
        -Drevision=${REVISION}
        org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar
      env:
        GITHUB_TOKEN: ${{ inputs.publish_token }}

    - name: Build RELEASE
      shell: bash
      if:  startsWith( github.ref, 'refs/tags/' )
      run: >
        mvn -B deploy --no-transfer-progress -Prelease
        -DaltDeploymentRepository=github::default::${{ inputs.repo_url }}
        -s $GITHUB_WORKSPACE/settings.xml
        -Drevision=${REVISION}
        org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar
      env:
        GITHUB_TOKEN: ${{ inputs.publish_token }}

    - name: Generate SBOM
      shell: bash
      run: > 
        mvn -B org.cyclonedx:cyclonedx-maven-plugin:2.7.10:makeAggregateBom
        --no-transfer-progress
        -s $GITHUB_WORKSPACE/settings.xml
        -Drevision=${REVISION}
        -DoutputReactorProjects=false

    - name: Process Deptrack URL
      shell: bash
      run: |
        pattern='^(([[:alnum:]]+):\/\/)?(([[:alnum:]]+)@)?([^:^@\/]+)(:([[:digit:]]+))?(\/?[^:^@]?)$'
        if [[ "$DEPTRACK_URL" =~ $pattern ]]; then
            export DEPTRACK_HOST=${BASH_REMATCH[5]}
            echo "DEPTRACK_HOST=${DEPTRACK_HOST}" >> $GITHUB_ENV
        else
            echo "URL did not match pattern: $url"
            exit 1
        fi

    - name: Send SBOM to DepTrack
      uses: DependencyTrack/gh-upload-sbom@v3.0.0
      with:
        serverHostname: ${{ env.DEPTRACK_HOST }}
        apiKey: ${{ env.DEPTRACK_API_KEY }}
        protocol: https
        projectName: ${{ env.PROJECT_NAME }}
        projectVersion: ${{ env.REVISION }}
        bomFilename: "target/bom.json"
        autoCreate: true

